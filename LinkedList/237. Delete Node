//237. Delete Node in a Linked List
time complexity O(n)
space complexity O(1)


class Solution {
public:
    void deleteNode(ListNode* node) {
        
       ListNode* prev = NULL;

       while(node != NULL && node->next != NULL){
            node->val = node->next->val;
            prev = node;
            node = node->next;
       }

       prev->next = NULL;
       delete node;

    }
};


space and time complexity O(1)

// class Solution {
// public:
//     void deleteNode(ListNode* node) {
//         // Copy the value of the next node into the current node
//         node->val = node->next->val;
        
//         // Store the node to be deleted
//         ListNode* temp = node->next;
        
//         // Skip over the next node
//         node->next = node->next->next;
        
//         // Free memory for the removed node
//         delete temp;
//     }
// };
