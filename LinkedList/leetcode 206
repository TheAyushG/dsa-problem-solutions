203. Remove Linked List Elements
//without dummy pointer
time comlexity O(n)
space comlexity O(1)

class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        
        while(head != NULL && head->val == val){
             ListNode* temp = head;
             head = head->next;
             delete temp;
        }
        
        ListNode* curr = head;
        while(curr != NULL && curr->next != NULL){
             if(curr->next->val == val){
                ListNode* temp = curr->next;
                curr->next = curr->next->next;
             }
             else
             curr = curr->next;
        }
        return head;
    }
};



//second approch
time complexity O(n)
space complexity O(1)

class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        
        if(head == NULL){
            return NULL;
        }

        ListNode* dummy = new ListNode(-1);
        dummy->next = head;

        ListNode* curr = dummy;

        while(curr->next != NULL){
            if(curr->next->val  == val){
                curr->next = curr->next->next;
            }
            else {
                curr = curr->next;
            }
        }
        return dummy->next;
    }
};
