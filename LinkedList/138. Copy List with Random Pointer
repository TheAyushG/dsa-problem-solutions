138. Copy List with Random Pointer
Time Complexity: O(n)
Space Complexity: O(1)
//but we can say that may be space complexity is O(n)

class Solution {
public:
    Node* copyRandomList(Node* head) {
        
        //1
        if(head == NULL){
            return NULL;
        }

        Node* curr = head;
        while(curr){
            Node* currNext = curr->next;
            curr->next = new Node (curr->val);
            curr->next->next = currNext;

            curr = currNext;
        }

        //2
        curr = head;
        while(curr && curr->next){
            if(curr->random == NULL){
                curr->next->random = NULL;
            }

            else{
                curr->next->random = curr->random->next;
            }

            curr = curr->next->next;
        }

 
        //3
        Node* newHead = head->next;
        Node* newCurr = newHead;

        curr = head;

        while(curr && newCurr){
            curr->next = curr->next == NULL ? NULL : curr->next->next;
            
            newCurr->next = newCurr->next == NULL ? NULL : newCurr->next->next;
            
            curr = curr->next;
            newCurr = newCurr->next;
        }

        return newHead;
    }
};
