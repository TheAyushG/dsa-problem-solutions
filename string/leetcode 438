//438. Find All Anagrams in a String

//Method Name: Sliding Window with Frequency Count
//Time Complexity: O(n)
//Space Complexity: O(1)

class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
        vector<int>result;

        if(s.size() < p.size())
        return result;

        vector<int> freqP(26,0), freqWindow(26,0);
        for(int i=0; i<p.size(); i++){
            char ch = p[i];
            freqP[ch - 'a']++;
        }

        int k = p.size();
        for(int i=0; i<s.size(); i++){
            freqWindow[s[i] - 'a']++;

            if(i>=k){
                freqWindow[s[i-k] - 'a']--;
            }

            if(i >= k-1 && freqWindow == freqP){
                result.push_back(i-k+1);
            }
        }
        return result;
    }
};
