leetcode 451 Sort Characters By Frequency
// https://leetcode.com/problems/sort-characters-by-frequency/

// Time Complexity: O(n log n) due to sorting
// Space Complexity: O(n) for the vector of pairs

/* using a vector of pairs to store characters and their frequencies
   and then sorting the vector based on frequencies.
   This is a straightforward approach that is easy to understand and implement.
*/

/*
class Solution {
public:

    typedef pair<char,int> p;
    string frequencySort(string s) {

       vector<p> vec(123);
       for(int i=0; i<s.size(); i++){
           char ch = s[i];
           vec[ch].first = ch;
           vec[ch].second++;
       }

       auto lambda = [&](p &p1, p &p2){
          return p1.second > p2.second;
       };

       sort(begin(vec), end(vec), lambda);
       string result = "";

       for(int i = 0; i <= 122; i++){
           if(vec[i].second > 0){
               char ch = vec[i].first;
               int freq = vec[i].second;
               string temp(freq, ch);
               result += temp;
           }
       }
       return result;
    }
};
*/