//1. **136. Single Number**

class Solution {
public:
    int singleNumber(vector<int>& nums) {
    
    int n = nums.size();
    unordered_map<int,int> map;

    for(int i=0; i<n; i++){
       int x = map[i];
       map[nums[i]]++;       
    }

    for(auto it : map){
        if(it.second == 1)
        return it.first;
      }
      return -1;
    }
};




//second method

**Time Complexity:**  O(n)
**Space Complexity:**  O(1)

Level â†’ EASY

class Solution {
public:
    int singleNumber(vector<int>& nums) {
    
    int n = nums.size();
    int prev = 0;

    for(int i=0; i<n; i++){
    prev = prev ^ nums[i];
       
    }
    return prev;
  }
};
