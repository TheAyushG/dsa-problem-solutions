//543. Diameter of Binary Tree

class Solution {
public:

    int solve(TreeNode* root, int& result){
        if(root == NULL){
            return 0;
        }

        int left = solve(root->left, result);
        int right = solve(root->right, result);
        
        result = max(result, left + right);

        return max(left,right) + 1;
    }


    int diameterOfBinaryTree(TreeNode* root) {
       if(root == NULL){
        return 0;
       } 

       int result = INT_MIN;
       solve(root, result);
       return result;
   
    }
};





// class Solution {
// public:
    
//     int solve(TreeNode* root, int& result){
//         if(root == NULL){
//             return 0;
//         }

//         int left = solve(root->left, result);
//         int right = solve(root->right, result); // 1
//                                                // / \  
//                                               // 2   3
//         result = max(result, left+right);    // / \
//                                             // 4   5 
//         return max(left, right) + 1;
//     }

//     int diameterOfBinaryTree(TreeNode* root) {
        
//         if(root == NULL){                
//             return 0;             
//         }                                  
                                      
//         int result = INT_MIN;
//         solve(root, result);
//         return result;
//     }
// };
