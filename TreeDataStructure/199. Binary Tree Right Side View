//199. Binary Tree Right Side View


//DFS solution
class Solution {
public:
    
    void preOrder (TreeNode* root, int level, vector<int>& result){
        if(root == NULL)
            return;
        

        if(result.size() < level){
            result.push_back(root->val);
        }

        preOrder(root->right, level+1, result);
        preOrder(root->left, level+1, result);
    }

    vector<int> rightSideView(TreeNode* root) {
      vector<int> result;
      preOrder(root, 1, result);
      return result;
    }
};





//uisng BFS
//level order traversal solution

// class Solution {
// public:
//     vector<int> rightSideView(TreeNode* root) {

//         if(root == NULL)
//         return {};

//         vector<int>result;
//         queue<TreeNode*> q;
//         q.push(root);

//         while(!q.empty()){
//             int n = q.size();
//             TreeNode* node = NULL;

//             while(n--){
//               node = q.front();
//               q.pop();

//               if(node->left != NULL)                          
//               q.push(node->left);                      
                                           
//               if(node->right != NULL)         
//               q.push(node->right);          
//             }                            
//             result.push_back(node->val);    
//         }

//     return result;
//     }
// };
